Here‚Äôs your **ready-to-use prompt** to **reconfigure your Neon PostgreSQL database** every time you import your project into a **new Replit account** from GitHub or ZIP:

---

## ‚úÖ **Neon DB Replit Setup Prompt**

> üßæ Use this to quickly reconfigure the Neon database in a newly created Replit project.

---

### üîß Step 1: Install PostgreSQL Client Library

#### For Node.js:

```bash
npm install pg dotenv
```

#### For Python:

```bash
pip install psycopg2-binary python-dotenv
```

---

### üìÅ Step 2: Create a `.env` File in Replit

Add the following content to a new `.env` file:

```env
DATABASE_URL=postgresql://neondb_owner:npg_W2JBDIHYfA7G@ep-jolly-heart-a2fvr7ew.eu-central-1.aws.neon.tech/neondb?sslmode=require
PGDATABASE=neondb
PGHOST=ep-jolly-heart-a2fvr7ew.eu-central-1.aws.neon.tech
PGPORT=5432
PGUSER=neondb_owner
PGPASSWORD=npg_W2JBDIHYfA7G
```

---

### üìú Step 3: Use This Sample Code to Test the Connection

#### **JavaScript Example (`index.js`):**

```js
import dotenv from 'dotenv'
dotenv.config()
import pkg from 'pg'
const { Client } = pkg

const client = new Client({
  connectionString: process.env.DATABASE_URL,
  ssl: { rejectUnauthorized: false }
})

async function testConnection() {
  try {
    await client.connect()
    const res = await client.query('SELECT NOW()')
    console.log('‚úÖ Connected to Neon DB:', res.rows)
    await client.end()
  } catch (err) {
    console.error('‚ùå Connection error:', err)
  }
}

testConnection()
```

---

#### **Python Example (`main.py`):**

```python
import os
import psycopg2
from dotenv import load_dotenv

load_dotenv()

try:
    conn = psycopg2.connect(
        dbname=os.getenv("PGDATABASE"),
        user=os.getenv("PGUSER"),
        password=os.getenv("PGPASSWORD"),
        host=os.getenv("PGHOST"),
        port=os.getenv("PGPORT"),
        sslmode='require'
    )
    cur = conn.cursor()
    cur.execute("SELECT NOW();")
    print("‚úÖ Connected to Neon DB:", cur.fetchone())
    cur.close()
    conn.close()
except Exception as e:
    print("‚ùå Connection error:", e)
```

---

### üí° Tips

* Keep your `.env` private ‚Äî do not commit it to GitHub!
* You can also store this setup in a GitHub **template repo** and import it into Replit repeatedly.

---

Would you like me to turn this into a reusable Replit template file too?
